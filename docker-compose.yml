version: "3"

networks:
    loki:

services:
  
  ultimate-service-arena:
    build: arena-service/
    image: ultimate-service-arena
    container_name: ultimate-service-arena
    ports:
      - "3306"
      - "8080"
    volumes:
      - "./log/:/log"
      - "./config/:/config"
    environment:
      MICRO_SERVER_ID: 2001
      MICRO_REGISTRY: "consul"
      MICRO_REGISTRY_ADDRESS: "host.docker.internal:8500"
      MICRO_BROKER: "nsq"
      MICRO_BROKER_ADDRESS: "host.docker.internal:4150"
      MYSQL_ADDR: "host.docker.internal"
    depends_on:
      - "consul"
      - "nsqd"
      - "loki"
    networks:
      - loki
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/api/prom/push
        loki-retries: "5"
        loki-batch-size: "400"


  ultimate-service-game:
    build: game-service/
    image: ultimate-service-game
    container_name: ultimate-service-game
    ports:
      - "7030:7030"
      - "3306"
      - "8080:8080"
    volumes:
      - "./log/:/log"
      - "./config/:/config"
    environment:
      MICRO_SERVER_ID: 1001
      MICRO_REGISTRY: "consul"
      MICRO_REGISTRY_ADDRESS: "host.docker.internal:8500"
      MICRO_BROKER: "nsq"
      MICRO_BROKER_ADDRESS: "host.docker.internal:4150"
      MYSQL_ADDR: "host.docker.internal"
    depends_on:
      - "consul"
      - "nsqd"
      - "ultimate-service-arena"
      - "loki"
    networks:
      - loki
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/api/prom/push
        loki-retries: "5"
        loki-batch-size: "400"


  consul:
    image: consul
    command: "agent -dev -log-level=info -data-dir=/consul_data -ui -client=0.0.0.0"
    container_name: consul
    ports:
      - "8500:8500"
    volumes:
      - "./data/consul/:/consul_data"
      - "./config/:/config"
    networks:
      - loki
    depends_on:
      - loki
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/api/prom/push
        loki-retries: "5"
        loki-batch-size: "400"

  nsqlookupd:
    image: nsqio/nsq
    command: /nsqlookupd -log-level=info
    container_name: nsqlookupd
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/api/prom/push"
        loki-retries: "5"
        loki-batch-size: "400"
    networks:
      - loki
    depends_on:
      - loki
    ports:
      - "4160:4160"
      - "4161:4161"

  nsqd:
    image: nsqio/nsq
    command: /nsqd --data-path=/nsq_data -log-level=info -lookupd-tcp-address=host.docker.internal:4160 
    container_name: nsqd
    networks:
      - loki
    volumes:
      - "./data/nsq/:/nsq_data"
    ports:
      - "4150:4150"
      - "4151:4151"
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/api/prom/push"
        loki-retries: "5"
        loki-batch-size: "400"

    depends_on:
      - nsqlookupd
      - nsqadmin
      - loki

  nsqadmin:
    image: nsqio/nsq
    command: /nsqadmin -lookupd-http-address=loki:4161
    container_name: nsqadmin
    networks:
      - loki
    depends_on:
      - nsqlookupd  
      - loki
    ports:
      - "4171:4171"
    logging:
      driver: loki
      options:
        loki-url: "http://host.docker.internal:3100/api/prom/push"
        loki-retries: "5"
        loki-batch-size: "400"


  loki:
    image: grafana/loki
    container_name: loki
    ports:
      - "3100:3100"
    volumes:
      - ./config/loki/:/etc/loki
    command: -config.file=/etc/loki/loki-local-config.yaml
    networks:
      - loki

  # promtail:
  #   image: grafana/promtail
  #   container_name: promtail
  #   volumes:
  #     - ./config/promtail/:/etc/promtail
  #     - /var/log:/var/log
  #   command:
  #     -config.file=/etc/promtail/promtail-docker-config.yaml
  #   networks:
  #     - loki

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
        - "3000:3000"
    user: "472"
    environment:
      GF_EXPLORE_ENABLED: "true"
    networks:
      - loki
    logging:
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/api/prom/push
        loki-retries: "5"
        loki-batch-size: "400"

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   volumes:
  #       - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   command:
  #       - "--config.file=/etc/prometheus/prometheus.yml"
  #   ports:
  #       - "9090:9090"

  # fluentd:
  #   build:
  #     context: fluentd/
  #   container_name: fluentd
  #   volumes:
  #     - ./fluentd/etc/:/fluentd/etc/
  #     - ./fluentd/log/:/fluentd/log
  #   logging:
  #     driver: "json-file"
  #     options:
  #         max-size: "1G"
  #         max-file: "2"
  #   ports:
  #     - "24224:24224"
  #     - "24224:24224/udp"
  
